<?xml version="1.0" encoding="UTF-8"?>

<!-- 
/***********************************************************************************
 * Cross Queues - A Model driven I/O queues utilities framework 
 * 
 * Copyright (c) 2008 - 2010, Lucas Bigeardel
 * 
 * The library is released under:
 * 
 * A) LGPL
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this library; if not, write to the
 * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301 USA
 * 
 * B) EPL
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Lucas Bigeardel <lucas.bigeardel@gmail.com> - Initial API and implementation
 ***********************************************************************************/


 -->

<cdoServer>

	<acceptor type="tcp" listenAddr="0.0.0.0" port="2036">
  		<!--<negotiator type="challenge" description="/Users/lb/SAQx/"/>-->
	</acceptor>

   <repository name="SAQxCDORepository">
     <property name="overrideUUID" value="1ff5d226-b1f0-40fb-aba2-0c31b38c764f"/>
     <property name="supportingAudits" value="true"/>
     <property name="supportingRevisionDeltas" value="true"/>
     <property name="verifyingRevisions" value="false"/>
     <property name="currentLRUCapacity" value="10000"/>
     <property name="revisedLRUCapacity" value="100"/>
     
     <store type="db">
       <!-- type: horizontal | vertical | <any user-contributed type>-->
       <mappingStrategy type="horizontal">
         <!-- ONE_TABLE_PER_REFERENCE | ONE_TABLE_PER_CLASS | ONE_TABLE_PER_PACKAGE | ONE_TABLE_PER_REPOSITORY | LIKE_ATTRIBUTES -->
         <property name="toManyReferences" value="ONE_TABLE_PER_REFERENCE"/>
 
         <!-- LIKE_ATTRIBUTES | LIKE_TO_MANY_REFERENCES-->
         <property name="toOneReferences" value="LIKE_ATTRIBUTES"/>
         
         <!-- MODEL | STRATEGY-->
         <property name="mappingPrecedence" value="MODEL"/>
       </mappingStrategy>
       <jdbcDelegate type="preparedStatement" >
			    <!-- to explicitly force prepared statement caching (e.g., if statement pooling is not supported 
			         by the JDBC driver, use
			   <property name="cacheStatements" value="enabled" /> 
			         Else, the implicit default is:
			   <property name="cacheStatements" value="guess" />
			         Which guesses the correct setting based on the JDBC driver's metadata.
			         Also supported is the third setting "disabled".
			   -->
			</jdbcDelegate>
       <dbAdapter name="derby-embedded"/>
       <dataSource class="org.apache.derby.jdbc.EmbeddedDataSource" 
         databaseName="SAQx"
         createDatabase="create"/>
 
     </store>
   </repository>

</cdoServer>

